<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lucene.Net.Analysis.CJK</name>
    </assembly>
    <members>
        <member name="T:Lucene.Net.Analysis.CJK.CJKAnalyzer">
             <summary>
             Filters CJKTokenizer with StopFilter.
            
             @author Che, Dong
             </summary>
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKAnalyzer.stopWords">
            An array containing some common English words that are not usually
            useful for searching. and some double-byte interpunctions.....
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKAnalyzer.stopTable">
            stop word list 
        </member>
        <member name="M:Lucene.Net.Analysis.CJK.CJKAnalyzer.#ctor">
            <summary>
            Builds an analyzer which removes words in STOP_WORDS.
            </summary>
        </member>
        <member name="M:Lucene.Net.Analysis.CJK.CJKAnalyzer.#ctor(System.String[])">
            <summary>
            Builds an analyzer which removes words in the provided array.
            </summary>
            <param name="stopWords">stop word array</param>
        </member>
        <member name="M:Lucene.Net.Analysis.CJK.CJKAnalyzer.TokenStream(System.String,System.IO.TextReader)">
            <summary>
            get token stream from input
            </summary>
            <param name="fieldName">lucene field name</param>
            <param name="reader">input reader</param>
            <returns>Token Stream</returns>
        </member>
        <member name="T:Lucene.Net.Analysis.CJK.CJKTokenizer">
            <summary>
            
            CJKTokenizer was modified from StopTokenizer which does a decent job for
            most European languages. and it perferm other token method for double-byte
            Characters: the token will return at each two charactors with overlap match.
            Example: "java C1C2C3C4" will be segment to: "java" "C1C2" "C2C3" "C3C4" it
            also need filter filter zero length token ""<br/>
            for Digit: digit, '+', '#' will token as letter<br/>
            for more info on Asia language(Chinese Japanese Korean) text segmentation:
            please search  <a
            href="http://www.google.com/search?q=word+chinese+segment">google</a>
            
            
            @author Che, Dong
            @version $Id: CJKTokenizer.java,v 1.3 2003/01/22 20:54:47 otis Exp $
            </summary>
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.MAX_WORD_LEN">
            Max word length 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.IO_BUFFER_SIZE">
            buffer size: 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.offset">
            word offset, used to imply which character(in ) is parsed 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.bufferIndex">
            the index used only for ioBuffer 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.dataLen">
            data length 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.buffer">
            character buffer, store the characters which are used to compose <br/>
            the returned Token
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.ioBuffer">
            I/O buffer, used to store the content of the input(one of the <br/>
            members of Tokenizer)
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.tokenType">
            word type: single=>ASCII  double=>non-ASCII word=>default 
        </member>
        <member name="F:Lucene.Net.Analysis.CJK.CJKTokenizer.preIsTokened">
            tag: previous character is a cached double-byte character  "C1C2C3C4"
            ----(set the C1 isTokened) C1C2 "C2C3C4" ----(set the C2 isTokened)
            C1C2 C2C3 "C3C4" ----(set the C3 isTokened) "C1C2 C2C3 C3C4"
        </member>
        <member name="M:Lucene.Net.Analysis.CJK.CJKTokenizer.#ctor(System.IO.TextReader)">
            <summary>
            Construct a token stream processing the given input.
            </summary>
            <param name="_in">I/O reader</param>
        </member>
        <member name="M:Lucene.Net.Analysis.CJK.CJKTokenizer.Next">
            <summary>
             Returns the next token in the stream, or null at EOS.
            </summary>
            <returns>Token</returns>
        </member>
    </members>
</doc>
